{
  "summary": {
    "asset_count": 30,
    "referenced_asset_count": 1,
    "orphan_asset_count": 30,
    "missing_reference_count": 240,
    "js_called_functions_count": 39,
    "js_defined_functions_count": 116,
    "js_missing_implementations": 0,
    "flask_routes_count": 20
  },
  "orphans": [
    "backend/static/categories/action.jpg",
    "backend/static/categories/anime.jpg",
    "backend/static/categories/anime_anime-fox-dragonflame_1024x1536.jpg",
    "backend/static/categories/fantasy1.jpg",
    "backend/static/categories/fantasy_angel-vs-demon-dual_1024x1536.jpg",
    "backend/static/categories/fantasy_angelic-paladin-flamesword_1024x1536.jpg",
    "backend/static/categories/fantasy_cute-celestial-mage_1024x1024.jpg",
    "backend/static/categories/fantasy_dark-angel_1024x1536.jpg",
    "backend/static/categories/fantasy_dark-knight-flame_1024x1536.jpg",
    "backend/static/categories/fantasy_elemental-fairy-firewater_1024x1536.jpg",
    "backend/static/categories/fantasy_fantasy-castle-themepark_1024x1024.jpg",
    "backend/static/categories/fantasy_halo-dualblades-sentinel_1024x1536.jpg",
    "backend/static/categories/fantasy_halo-spear-guardian_1024x1536.jpg",
    "backend/static/categories/fantasy_light-angel_1024x1536.jpg",
    "backend/static/categories/fantasy_rune-wolf-storm_1024x1536.jpg",
    "backend/static/categories/fantasy_spirit-wolf-aura_1024x1536.jpg",
    "backend/static/categories/horror_cerberus-hellhound_1024x1536.jpg",
    "backend/static/categories/horror_dark-reaper-angel_1024x1536.jpg",
    "backend/static/categories/horror_pumpkin-rider_1024x1536.jpg",
    "backend/static/categories/romance.jpg",
    "backend/static/categories/scifi.jpg",
    "backend/static/categories/scifi_cybernetic-tiger-cub_1024x1024.jpg",
    "backend/static/favicon.ico",
    "backend/static/home-logo.png",
    "backend/static/logo.png",
    "backend/static/visionary-favicon-128x128.png",
    "backend/static/visionary-favicon-16x16.png",
    "backend/static/visionary-favicon-32x32.png",
    "backend/static/visionary-favicon-48x48.png",
    "backend/static/visionary-favicon-64x64.png"
  ],
  "missing_refs": [
    " http://example.com ",
    "${img.url}",
    "${item.to}",
    "${item.url}",
    "${msg.imageUrl}",
    "${post.imageUrl}",
    "${profilePicUrl}",
    "${profilePic}",
    "**parts",
    "*,\n    strip_whitespace: bool = True,\n    min_length: int = 1,\n    max_length: int = 2**16,\n    tld_required: bool = True,\n    host_required: bool = True,\n    allowed_schemes: Optional[Collection[str]] = None,\n",
    "_absolute_link_url(base_url, href",
    "_absolute_link_url(page_url, file_url",
    "api/account_sessions",
    "asgi_scope, default_scheme, host",
    "aws_context, start_time",
    "aws_event, aws_context",
    "base_url, config",
    "base_url: str, url: str",
    "cfg",
    "class_attributes, **kwargs",
    "client, host\n        ",
    "client, url",
    "client_config=client_config,\n            endpoint_url=endpoint_url,\n        ",
    "client_endpoint_url\n        ",
    "cls",
    "cls, fee, sid",
    "cls, id, nested_id=None",
    "cls, location: str",
    "cls, sid",
    "cls, uri: str",
    "cls, url",
    "cls, url: Any, info: core_schema.SerializationInfo",
    "connect/custom-accounts",
    "create",
    "db_url",
    "defaults[data]",
    "docs/billing/subscriptions/usage-based",
    "docs/payments/payment-intents",
    "docs/payments/save-and-reuse",
    "editable_project_location",
    "endpoint_type",
    "endpoint_url",
    "endpoint_url\n    ",
    "endpoint_url\n        ",
    "entry.path",
    "environ",
    "environ, strip_querystring=True",
    "environ, use_x_forwarded_for",
    "environ, use_x_forwarded_for=False",
    "environ: WSGIEnvironment,\n    root_only: bool = False,\n    strip_querystring: bool = False,\n    host_only: bool = False,\n    trusted_hosts: t.Iterable[str] | None = None,\n",
    "environment.finalize(",
    "express: bool = False, **params: Unpack[OAuthAuthorizeUrlParams]\n    ",
    "fee, sid",
    "final_time",
    "foo",
    "full_url",
    "generate",
    "google.com:80",
    "http://google.com/",
    "http://google.com/mail/",
    "https://cdnjs.cloudflare.com/ajax/libs/firacode/6.2.0/woff/FiraCode-Bold.woff",
    "https://cdnjs.cloudflare.com/ajax/libs/firacode/6.2.0/woff/FiraCode-Regular.woff",
    "https://cdnjs.cloudflare.com/ajax/libs/firacode/6.2.0/woff2/FiraCode-Bold.woff2",
    "https://cdnjs.cloudflare.com/ajax/libs/firacode/6.2.0/woff2/FiraCode-Regular.woff2",
    "https://docs.stripe.com/api/products",
    "https://fonts.googleapis.com/css",
    "https://google.com/mail/",
    "https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js",
    "https://{middle}",
    "index",
    "index_url",
    "info.url",
    "key",
    "key: str",
    "link,\n                    req.source_dir,\n                    self._download,\n                    self.verbosity,\n                    self.download_dir,\n                    hashes,\n                ",
    "link,\n            download,\n            download_dir,\n            hashes=hashes,\n        ",
    "link, download_dir, hashes=hashes",
    "link.url",
    "link: Link,\n    download: Downloader,\n    download_dir: str | None = None,\n    hashes: Hashes | None = None,\n",
    "link: Link,\n    location: str,\n    download: Downloader,\n    verbosity: int,\n    download_dir: str | None = None,\n    hashes: Hashes | None = None,\n",
    "link: Link, download_dir: str | None = None, hashes: Hashes | None = None\n",
    "local_path: str",
    "location",
    "m, url, parts",
    "mailto:MiniVisionary.contactus@gmail.com",
    "mailto:minivisionary.contactus@gmail.com",
    "mailto:{middle}",
    "mailto:{os.getenv(",
    "metadata_link,\n            self._download,\n            hashes=metadata_link.as_hashes(",
    "method,\n                url,\n                fields=fields,  ",
    "method, url, fields=fields, headers=headers, **urlopen_kw\n            ",
    "method_name, service_name, **kwargs",
    "middle",
    "name",
    "name, url, self._session",
    "name: str",
    "name: str, url: str, session: PipSession",
    "name_or_url",
    "name_or_url: Union[str, URL]",
    "new_path, query_args",
    "new_proxies[scheme]",
    "options.url",
    "original",
    "original_url",
    "original_url,\n        ",
    "os.path.join(wheel_dir, wheel_name",
    "os.path.normpath(os.path.abspath(link.path",
    "out_path",
    "params, context, **kwargs",
    "path",
    "path, query_args, domain_part=domain_part",
    "path: str",
    "postgresql+psycopg2://user:pass@host/dbname",
    "proxy",
    "proxy,\n                proxy_headers=proxy_headers,\n                num_pools=self._pool_connections,\n                maxsize=self._pool_maxsize,\n                block=self._pool_block,\n                **proxy_kwargs,\n            ",
    "proxy_url",
    "proxy_url, **proxy_manager_kwargs",
    "real_url, sanitize=False",
    "relative_uri",
    "repo",
    "repo_dir",
    "repo_url, revision, project_name, subdir=subdir",
    "repo_url: str, rev: str, project_name: str, subdir: str | None = None\n",
    "req.url",
    "request, proxies",
    "request, response",
    "request.url",
    "request.url, sanitize=False",
    "request_dict=request_dict,\n        expires_in=expires_in,\n        operation_name=operation_name,\n    ",
    "request_dict_copy, region_name=source_region, operation_name=model.name\n    ",
    "request_signer, params, model, src, dest\n    ",
    "request_signer, request_dict, model, source_region, destination_region\n",
    "scheme: str,\n    host: str,\n    root_path: str | None = None,\n    path: str | None = None,\n    query_string: bytes | None = None,\n",
    "scheme: str, host: str, script_root: str",
    "secret_url",
    "self",
    "self,\n        method: str,\n        url: str,\n        fields: _TYPE_ENCODE_URL_FIELDS | None = None,\n        headers: typing.Mapping[str, str] | None = None,\n        **urlopen_kw: str,\n    ",
    "self,\n        params: OAuth.OAuthAuthorizeUrlParams = {},\n        options: OAuthAuthorizeUrlOptions = {},\n    ",
    "self,\n        path: str,\n        endpoint: t.Any,\n        values: t.Mapping[str, t.Any],\n        method: str,\n        query_args: t.Mapping[str, t.Any] | str,\n    ",
    "self,\n        path_info: str,\n        query_args: t.Mapping[str, t.Any] | str | None = None,\n        domain_part: str | None = None,\n    ",
    "self,\n        request_dict,\n        operation_name,\n        expires_in=3600,\n        region_name=None,\n        signing_name=None,\n    ",
    "self, ClientMethod, Params=None, ExpiresIn=3600, HttpMethod=None\n",
    "self, attr: URL",
    "self, base_url, config",
    "self, base_url, extra_params",
    "self, client_config, endpoint_url",
    "self, full_url",
    "self, hostname, is_secure, supported_protocols",
    "self, method, url, fields=None, headers=None, **urlopen_kw",
    "self, old_url, new_endpoint, **kwargs",
    "self, original",
    "self, params, context, **kwargs",
    "self, parts",
    "self, path",
    "self, project_url: Link, link_evaluator: LinkEvaluator\n    ",
    "self, proxy_url",
    "self, relative_uri",
    "self, request, proxies",
    "self, request: Request, response: Response",
    "self, type=EndpointType.ENVELOPE  ",
    "self, url",
    "self, url, date_less_than=None, policy=None",
    "self, url, event_dict, **kwargs",
    "self, url, params",
    "self, url, pool_kwargs=None",
    "self, url: URL",
    "self, url: URL | str",
    "self, url: _httpx.URL | str",
    "self, url: str",
    "self, url: str | None",
    "self, url: str, pool_kwargs: dict[str, typing.Any] | None = None\n    ",
    "self, value",
    "self, value: str | None",
    "self, value: t.Any",
    "self, value: uuid.UUID",
    "self, values",
    "self._TOKEN_PATH",
    "self._environ[self.ENV_VAR]",
    "self.fee, self.id",
    "self.link.url",
    "self.scheme, self.host",
    "self.scheme, self.host, self.root_path",
    "self.scheme, self.host, self.root_path, self.path",
    "self.scheme, self.host, self.root_path, self.path, self.query_string\n        ",
    "self.url",
    "self.url_scheme, self.host, self.script_root",
    "source_dir",
    "static/assets/index-DCWnbMGA.js",
    "static/assets/index-mtvaq8nq.css",
    "static/community.html",
    "static/store.html",
    "static/terms.html",
    "str(params.url",
    "str(request.url",
    "str_proxy_url",
    "u",
    "url",
    "url, **kw",
    "url, **kwargs",
    "url, None, ident",
    "url, _get_netloc",
    "url, _redact_netloc",
    "url, date_less_than=datetime(2015, 12, 1",
    "url, driver, None",
    "url, driver, ident",
    "url, driver, query_str",
    "url, driver_only, query_str",
    "url, params",
    "url, policy=my_policy",
    "url, remove_authority=True, remove_query_values=True, split=False",
    "url, remove_authority=True, remove_query_values=sanitize, split=True\n    ",
    "url, sanitize=True",
    "url, wait=wait, locate=locate",
    "url.strip(",
    "url1",
    "url2",
    "url: Union[str, URL],\n    *,\n    poolclass: Optional[Type[Pool]] = ...,\n    logging_name: str = ...,\n    pre_ping: bool = ...,\n    size: int = ...,\n    recycle: int = ...,\n    reset_on_return: Optional[_ResetStyleArgType] = ...,\n    timeout: float = ...,\n    use_lifo: bool = ...,\n    **kwargs: Any,\n",
    "url: Union[str, URL], **kwargs: Any",
    "url: str",
    "url: str,\n",
    "url: str, **kw: typing.Any",
    "url: str, transform_netloc: Callable[[str], tuple[Any, ...]]\n",
    "url: str, wait: bool = False, locate: bool = False",
    "url_no_extras",
    "url_path",
    "urllib.request.url2pathname(part",
    "urlsplit(request.url",
    "val",
    "value",
    "value: URL | bytes | str, *, name: str",
    "wheel_file",
    "x: str",
    "{LOGO_URL}",
    "{dash}",
    "{html_location}",
    "{middle}",
    "{os.getenv(",
    "{poster_url}",
    "{reset_url}",
    "{style.link}"
  ],
  "js": {
    "called": [
      "checkout",
      "closeModal",
      "closeNewFolderModal",
      "closeUploadModal",
      "copyEmail",
      "createFolder",
      "deleteImage",
      "deletePost",
      "deleteSession",
      "exportCSV",
      "filterLibrary",
      "handleMediaSelect",
      "logout",
      "openFolder",
      "openMediaModal",
      "openModal",
      "openNameModal",
      "openNewFolderModal",
      "openPasswordModal",
      "openUploadModal",
      "renameSession",
      "reportPost",
      "saveImage",
      "saveName",
      "saveToLibrary",
      "scrollToTop",
      "submitPost",
      "switchToSession",
      "toggleFaq",
      "togglePassword",
      "toggleReaction",
      "updatePassword",
      "uploadFile",
      "uploadImage",
      "uploadMedia",
      "useLibraryImage",
      "usePrompt",
      "useTemplate",
      "viewImage"
    ],
    "defined": [
      "addMessage",
      "addToImageGrid",
      "checkout",
      "closeModal",
      "closeNewFolderModal",
      "closeSidebar",
      "closeUploadModal",
      "cn",
      "copyEmail",
      "createFolder",
      "createModal",
      "createNewSession",
      "currentFromHash",
      "deleteImage",
      "deleteItem",
      "deletePost",
      "deleteSession",
      "downloadImage",
      "ensureCapsBadge",
      "exportCSV",
      "filterLibrary",
      "fmt",
      "generatePoster",
      "generateSessionId",
      "getInitialUsername",
      "getUserCredits",
      "h",
      "handleEnterKey",
      "handleImageUpload",
      "handleMediaSelect",
      "handlePlusClick",
      "hide",
      "hideMessage",
      "init",
      "initInterface",
      "initMiniPlusMenu",
      "initSessions",
      "initSharedLayout",
      "loadData",
      "loadDemoData",
      "loadGeneratedImages",
      "loadLibrary",
      "loadPosts",
      "loadUserData",
      "logout",
      "navigateTo",
      "openAddReference",
      "openDB",
      "openFolder",
      "openFromLibrary",
      "openMediaModal",
      "openModal",
      "openNameModal",
      "openNewFolderModal",
      "openPasswordModal",
      "openTemplates",
      "openTextPrompts",
      "openUploadDialog",
      "openUploadModal",
      "promptRename",
      "removeReference",
      "renameSession",
      "renderBalance",
      "renderChatHistory",
      "renderFooter",
      "renderGallery",
      "renderLibrary",
      "renderPosts",
      "renderPurchases",
      "renderSessions",
      "renderTopbar",
      "renderTransactions",
      "reportPost",
      "safeParseJson",
      "saveGallery",
      "saveImage",
      "saveLibrary",
      "saveName",
      "savePosts",
      "saveToLibrary",
      "scrollToBottom",
      "scrollToTop",
      "sendOnce",
      "setActiveSession",
      "setCaches",
      "setMsg",
      "setVisible",
      "setupPasswordField",
      "setupReferenceUpload",
      "show",
      "showChatMode",
      "showLibraryModal",
      "showMessage",
      "showTemplatesModal",
      "showTextPromptsModal",
      "showWelcomeMode",
      "submitPost",
      "swapTabs",
      "switchToSession",
      "toggleFaq",
      "togglePassword",
      "toggleReaction",
      "toggleSidebar",
      "updateFromHash",
      "updateImageGrid",
      "updatePassword",
      "updateReferenceIndicators",
      "updateSessionTitle",
      "updateUI",
      "uploadFile",
      "uploadImage",
      "uploadMedia",
      "useLibraryImage",
      "usePrompt",
      "useTemplate",
      "viewImage"
    ],
    "missing_implementations": []
  },
  "assets": [
    {
      "path": "backend/static/favicon.ico",
      "size": 1636,
      "hash": "492a56b493b7"
    },
    {
      "path": "backend/static/home-logo.png",
      "size": 1373030,
      "hash": "4d5d3c42444e"
    },
    {
      "path": "backend/static/logo.png",
      "size": 1373030,
      "hash": "4d5d3c42444e"
    },
    {
      "path": "backend/static/visionary-favicon-128x128.png",
      "size": 24358,
      "hash": "3a232711f8c8"
    },
    {
      "path": "backend/static/visionary-favicon-16x16.png",
      "size": 856,
      "hash": "8912001267fd"
    },
    {
      "path": "backend/static/visionary-favicon-32x32.png",
      "size": 2322,
      "hash": "c2474bede354"
    },
    {
      "path": "backend/static/visionary-favicon-48x48.png",
      "size": 4433,
      "hash": "ecb2910ee70d"
    },
    {
      "path": "backend/static/visionary-favicon-64x64.png",
      "size": 7297,
      "hash": "1670a80687d2"
    },
    {
      "path": "backend/static/categories/action.jpg",
      "size": 781201,
      "hash": "4e2411cce618"
    },
    {
      "path": "backend/static/categories/anime.jpg",
      "size": 471262,
      "hash": "a371dd4f8d31"
    },
    {
      "path": "backend/static/categories/anime_anime-fox-dragonflame_1024x1536.jpg",
      "size": 744037,
      "hash": "dc9ed920b1c1"
    },
    {
      "path": "backend/static/categories/fantasy1.jpg",
      "size": 399198,
      "hash": "40f118a15d0b"
    },
    {
      "path": "backend/static/categories/fantasy_angel-vs-demon-dual_1024x1536.jpg",
      "size": 655337,
      "hash": "0deebedc7ef0"
    },
    {
      "path": "backend/static/categories/fantasy_angelic-paladin-flamesword_1024x1536.jpg",
      "size": 752318,
      "hash": "11ed525cc482"
    },
    {
      "path": "backend/static/categories/fantasy_cute-celestial-mage_1024x1024.jpg",
      "size": 295413,
      "hash": "487cb11b37e4"
    },
    {
      "path": "backend/static/categories/fantasy_dark-angel_1024x1536.jpg",
      "size": 423787,
      "hash": "20caee9fbe45"
    },
    {
      "path": "backend/static/categories/fantasy_dark-knight-flame_1024x1536.jpg",
      "size": 415598,
      "hash": "fa28f0b85a97"
    },
    {
      "path": "backend/static/categories/fantasy_elemental-fairy-firewater_1024x1536.jpg",
      "size": 558499,
      "hash": "40e24d83becd"
    },
    {
      "path": "backend/static/categories/fantasy_fantasy-castle-themepark_1024x1024.jpg",
      "size": 561570,
      "hash": "39ebdcc3e524"
    },
    {
      "path": "backend/static/categories/fantasy_halo-dualblades-sentinel_1024x1536.jpg",
      "size": 556819,
      "hash": "2c0581bc4c5b"
    },
    {
      "path": "backend/static/categories/fantasy_halo-spear-guardian_1024x1536.jpg",
      "size": 481119,
      "hash": "a6963e9515eb"
    },
    {
      "path": "backend/static/categories/fantasy_light-angel_1024x1536.jpg",
      "size": 597611,
      "hash": "f2e5857e4f61"
    },
    {
      "path": "backend/static/categories/fantasy_rune-wolf-storm_1024x1536.jpg",
      "size": 576325,
      "hash": "2876a2eb9005"
    },
    {
      "path": "backend/static/categories/fantasy_spirit-wolf-aura_1024x1536.jpg",
      "size": 653208,
      "hash": "128546322406"
    },
    {
      "path": "backend/static/categories/horror_cerberus-hellhound_1024x1536.jpg",
      "size": 325306,
      "hash": "137aa93e4784"
    },
    {
      "path": "backend/static/categories/horror_dark-reaper-angel_1024x1536.jpg",
      "size": 386201,
      "hash": "247acdf93e61"
    },
    {
      "path": "backend/static/categories/horror_pumpkin-rider_1024x1536.jpg",
      "size": 456546,
      "hash": "49ff72779016"
    },
    {
      "path": "backend/static/categories/romance.jpg",
      "size": 445135,
      "hash": "f5120b555c03"
    },
    {
      "path": "backend/static/categories/scifi.jpg",
      "size": 380453,
      "hash": "4b26c19c7420"
    },
    {
      "path": "backend/static/categories/scifi_cybernetic-tiger-cub_1024x1024.jpg",
      "size": 360342,
      "hash": "c22211eaab88"
    }
  ],
  "routes": [
    "/",
    "/<path:path>",
    "/auth.html",
    "/change-password",
    "/create",
    "/forgot-password",
    "/generate",
    "/login",
    "/logo.png",
    "/me",
    "/privacy.html",
    "/profile/upload_ARCHIVED",
    "/profile_ARCHIVED_USE_API_PROFILE_INSTEAD",
    "/register",
    "/static/<path:filename>",
    "/stream",
    "/terms.html",
    "/update",
    "/upload",
    "/uploads/<path:name>"
  ]
}